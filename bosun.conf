tsdbHost = localhost:4242
stateFile = /bosun/bosun.state
emailFrom = infrastructure-alert-cluster-b@centerdevice.com
smtpHost = 10.102.2.231:25

macro alert.default {
  critNotification = default
  warnNotification = default
  template = default
  ignoreUnknown = true
}

template default {
  subject = {{.Last.Status}}: {{.Alert.Vars.name}} on {{.Group.host}}.{{.Group.domain}}
  body = `<p><b>Name:</b> {{.Alert.Name}}
  <p><b>Current Value:</b> {{ (index .Computations 0).Value }}
  <p><b>Tags:</b>
  <ul>
    {{range $k, $v := .Group}}
      <li><i>{{$k}}</i>: {{$v}}
    {{end}}
  </ul>
  <p><b>Description:</b> {{.Alert.Vars.description}}
  <p><b>Steps:</b> {{.Alert.Vars.steps}}
  <p>{{ .Graph .Alert.Vars.q }}
`
}

unknownTemplate = default

notification default {
  email = lukas.pustina@centerdevice.de, daniel.schneller@centerdevice.com
  next = default
  timeout = 1h
}


alert os.process.count.is.too.high {
  macro = alert.default

  $q = q("sum:os.process.count{host=*,type=*,domain=*}", "1h", "")
  $metric = avg($q)
  $warnValue = 500
  $critValue = 550
  warn = $metric > $warnValue
  crit = $metric > $critValue

  $name = Too many processes
  $description = The amount of currently existing processes should be limited. Exceeding the warning value $warnValue or the critical value $critValue might be an indication for a problem.
  $steps = Please check the process list for anomalies using 'ps auxef' or 'top'.
}

alert ceph.osd.count.too.low {
  macro = alert.default
  
  $q = q("sum:ceph.osd.count{domain=*,group=*,host=*,service=ceph}", "1h", "")
  $metric = last($q)
  $expectedCount = 48
  $critValue = $expectedCount - 3
  $warnValue = $expectedCount - 1
  crit = $metric < $critValue
  warn = $metric < $warnValue

  $name = OSDs are missing
  $description = The number of OSD in our system is ${expectedCount}. If the number of active (up) OSDs drops to the warning value of $warnValue or even the critical value of $critValue we have serious problems.
  $steps = Please check the state of all OSDs using 'ceph osd tree'.
}

alert linux.loadavg_15_min.is.too.high {
  macro = alert.default
  
  $q = q("sum:linux.loadavg_15_min{host=*}", "1h", "")
  $metric = last($q)
  $critValue = 12
  $warnValue = 10
  crit = $metric > $critValue
  warn = $metric > $warnValue

  $name = Average load over 10 min is too high
  $description = The current load average calculated over 15 min is and indicator of the current load. Exceeding the warning value $warnValue or the critical value $critValue might be an indication for a problem.
  $steps = Please check the load using 'top' and 'iotop'.
}

alert ceph.flags.noscrub.set.too.long {
  macro = alert.default
  
  $q = q("sum:1d-avg:ceph.flags.noscrub{service=ceph,type=baremetal,group=nodes,host=*,domain=*}", "1d", "")
  $metric = min($q)
  $warnValue = 0
  warn = $metric == $warnValue

  $name = Ceph flag 'noscrub' set for over a day
  $description = The Ceph flag noscrub deactivates scrubbing of PGs which is an important maintenance functionality of Ceph. The value '0' means grep found the flag to be set.
  $steps = Please check ceph flag status using 'ceph -s'.
}

alert ceph.flags.nodeep_scrub.set.too.long {
  macro = alert.default
  
  $q = q("sum:1d-avg:ceph.flags.nodeep_scrub{service=ceph,type=baremetal,group=nodes,host=*,domain=*}", "1d", "")
  $metric = min($q)
  $warnValue = 0
  warn = $metric == $warnValue

  $name = Ceph flag 'nodeep-scrub' set for over a day
  $description = The Ceph flag nodeep-scrub deactivates deep scrubbing of PGs which is an important maintenance functionality of Ceph. The value '0' means grep found the flag to be set.
  $steps = Please check ceph flag status using 'ceph -s'.
}

alert ceph.flags.noout.set.too.long {
  macro = alert.default
  
  $q = q("sum:1h-avg:ceph.flags.noout{service=ceph,type=baremetal,group=nodes,host=*,domain=*}", "1h", "")
  $metric = min($q)
  $warnValue = 0
  warn = $metric == $warnValue

  $name = Ceph flag 'noout' set for over a day
  $description = The Ceph flag noout deactivates re-balancing in case of missing PGs or OSDs. This is only meant to be set for a short period of time for maintenance. The value '0' means grep found the flag to be set.
  $steps = Please check ceph flag status using 'ceph -s'.
}

alert ceph.linux.disk.os_in_progress.too.high {
  macro = alert.default
  
  $q = q("sum:linux.disk.ios_in_progress{dev=*,host=node*}", "5m", "")
  $metric = sum($q)
  $warnValue = 300
  $critValue = 500
  warn = $metric > $warnValue
  crit = $metric > $critValue

  $name = Too many disk iops in flight on baremetal ceph nodes
  $description = Waiting for IO syscalls to return is a critical performance. Therefore, when too many iops are waiting a warning ($warnValue) or even a critical alarm ($critValue) is triggered.
  $steps = Please check the current disk IO load using 'iostat -x 1' or 'iotop'.
}

